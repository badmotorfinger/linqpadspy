{"name":"Linqpadspy","tagline":"A plugin for LINQPad which displays compiler generated code in C#, VB.NET or IL.","body":"##LINQPadSpy\r\n\r\nLINQPadSpy shows decompiled sources from queries which have been compiled by LINQPad allowing one to see any additional compiler generated code.\r\n\r\n![LINQPadSpy Screenshot](https://github.com/vincpa/linqpadspy/raw/master/LINQPadSpy.JPG)\r\n\r\n### Download\r\n\r\n[Download the current release](https://github.com/vincpa/linqpadspy/releases/download/v0.1.1/linqpadspy-0.1.1.7z) and extract all files to the LINQPad plugin directory.\r\n\r\n### Goals\r\n\r\nGain a deeper understanding of the C# language and compiler with LINQPad.\r\n\r\n#### Current feature set\r\n* Decompiles source code when the query contains a `this.DumpDasm()` (C#) or `Me.DumpDasm()` (VB) in the execution path. You can also decompile an F# compiled assembly but the decompiled source will be in C#.\r\n* Detects which language is being used in LINQPad and shows the decompiled source in that language. Currently only VB.NET and C# are supported.\r\n* Displays tooltips when the mouse hovers over a type.\r\n* Ability to change the decompiled source language from C# to VB.NET or IL without rerunning your query.\r\n* Remembers position of split pane in LINQPad.\r\n* Display class heirarchy.\r\n\r\n### Compatibility\r\n\r\n* .NET 4\r\n* Tested with LINQPad 4.48.01 (Any CPU)\r\n\r\n### Known issues\r\n* The first decompilation can be slow but will be quicker thereafter.\r\n","google":"UA-50434187-1","note":"Don't delete this file! It's used internally to help with page regeneration."}